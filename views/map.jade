h1 Showing 
	span#title
div(style="float:right")
	a(href="http://github.com/frankamp/london-rid-map", style="font-size:.8em") What is this?
	br
	a(href="/presentation/index.html", style="font-size:.8em") Presentation
style
	html, body {
	height: 90%;
	padding: 5px;
	}

	#mapcontainer {
		height: 100%;
	}

	#navlist li
	{
	display: inline;
	list-style-type: none;
	padding-right: 5px;
	}
	
	svg {
	display: block;
	overflow: hidden;
	width: 100%;
	height: 100%;
	}

	#copy {
	position: absolute;
	left: 0;
	bottom: 4px;
	padding-left: 5px;
	font: 9px sans-serif;
	color: #fff;
	cursor: default;
	}

	#copy a {
	color: #fff;
	}

	.compass .back {
	fill: #eee;
	fill-opacity: .8;
	}

	.compass .fore {
	stroke: #999;
	stroke-width: 1.5px;
	}

	.compass rect.back.fore {
	fill: #999;
	fill-opacity: .3;
	stroke: #eee;
	stroke-width: 1px;
	shape-rendering: crispEdges;
	}

	.compass .direction {
	fill: none;
	}

	.compass .chevron {
	fill: none;
	stroke: #999;
	stroke-width: 5px;
	}

	.compass .zoom .chevron {
	stroke-width: 4px;
	}

	.compass .active .chevron, .compass .chevron.active {
	stroke: #fff;
	}

	.compass.active .active .direction {
	fill: #999;
	}
ul#navlist
	each val in facets.slice(0,24)
		li
			a(href="##{val}",onClick="displayFacet('#{val}')") #{val}
ul#navlist
	each val in facets.slice(24)
		li
			a(href="##{val}",onClick="displayFacet('#{val}')") #{val}
div#mapcontainer
a(href="http://www.kovcomp.co.uk/wordstat/RID.html", style="font-size:9px") Regressive Imagery Dictionary 
span |
a(href="http://github.com/frankamp/london-rid-map", style="font-size:9px") Fork this site 
span |
a(href="http://github.com/frankamp/node-ridict", style="font-size:9px") RID analysis node module 

script(src='/javascripts/jquery.min.js')
script(src='/javascripts/modernizr.min.js')
script(src='/javascripts/polymaps.min.js')
script(src='/javascripts/protodata.min.js')
script(src='/javascripts/nns.min.js')
script(src='/javascripts/fips.js')	
link(rel='stylesheet', href='/stylesheets/colorbrewer.css')
script
	var po = org.polymaps;

	var map = po.map()
		.container(document.getElementById("mapcontainer").appendChild(po.svg("svg")))
		.center({lat: 51.5, lon: -0.1})
		.zoomRange([3, 12])
		.zoom(11)
		.add(po.interact());

	map.add(po.image()
		.url(po.url("http://{S}tile.cloudmade.com"
		+ "/d30f6220cc1a42d491c337f55cd9516f" // http://cloudmade.com/register
		+ "/20760/256/{Z}/{X}/{Y}.png")
		.hosts(["a.", "b.", "c.", ""])));

	map.add(po.geoJson().url("features.json").on("load", load).on("show", show));
	
	map.add(po.compass()
		.pan("none"));

	map.container().setAttribute("class", "Blues");
	
	var facets = {};
	var quantiles = {};
	var layer = null;
	var current = 'GLORY';

	if(location.hash.length > 1){
		current = location.hash.slice(1);
	}

	$(window).bind('hashchange', function() {
		current = location.hash.slice(1);
		displayFacet(current);
	});

	function show(e){
		layer = e;
		displayFacet(current);
	}

	function load(e){
		layer = e;
		facets = {};
		quantiles = {};
		for (var i = 0; i < layer.features.length; i++) {
			var feature = layer.features[i];
			Object.keys(feature.data.properties.rates).forEach(function (item) {
				if (facets[item] == null)
					facets[item] = []
				facets[item].push(feature.data.properties.rates[item])
			});
		}
		Object.keys(facets).forEach(function (item) {
			quantiles[item] = pv.Scale.quantile()
				.quantiles(9)
				.domain(facets[item])
				.range(0, 8);
		});
		displayFacet(current);
	}

	function displayFacet(facet){
		$('#title').html(facet);
		current = facet;
		for (var i = 0; i < layer.features.length; i++) {
			var feature = layer.features[i];
			var props = feature.data.properties;
			var name = props.name;
			var rate = props.rates[facet];
			var value = props.facets[facet];
			feature.element.removeAttribute("class");
			feature.element.setAttribute("class", "q" + quantiles[facet](rate) + "-" + 9);
			for (var j = 0; j < feature.element.childNodes.length; j++) {
				feature.element.removeChild(feature.element.childNodes[j]);
			}
			feature.element.appendChild(po.svg("title").appendChild(document.createTextNode(name + " val: " + value + " rate: " + rate) ).parentNode);
		}
	}